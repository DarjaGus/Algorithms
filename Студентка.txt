Гусева Дарья группа 4097

Простите немного психанула и удалила репозиторий

Задание 1:
	Реализовать контейнер - динамический массив array с неизменяемым размером (на любом из языков)
	Проверить работу соответствующей тестовой программы
	Написать две функции для обработки массива из следующих пунктов и вызвать их из функции main.
	Ввести целое число с клавиатуры, создать массив такой размерности и заполнить его случайными числами. Среди элементов массива с четными индексами, найти тот, который имеет максимальное значение.
	Ввести целое число с клавиатуры, создать массив такой размерности и заполнить его случайными числами. Определить, какое число в массиве встречается чаще всего.
	Добавить пример входных данных и описать тест в CMakeLists.txt, который запускает разработанную программу и использует входные данные.

Задание 2:
	Реализовать в проекте Library односвязный список (модуль list) и стек на основе этого списка (модуль stack).
	Решить задачу, используя реализованный стек.
	Добавить пример входных данных и описать тест в CMakeLists.txt, который запускает разработанную программу и использует входные данные.
	Во входном файле записана последовательность операций со стеком JAVA-машины.
	Упрощённая JAVA-машина может оперировать стеком и четырьмя локальными переменными с номерами от 0 до 3.
	Выполнить операции, напечатать последовательность вызванных функций и финальное состояние стека и переменных.

	Арифметические операции извлекают операнды со стека, а затем кладут результат туда же.

	При работе со стеком выводить ошибку, если выполняется pop, store или арифметическая операция с адресом
	возврата или return с обычным числом.

	Список операций, которые должны поддерживаться:

	bipush число - занести число в стек
	pop - вытолкнуть верхнее значение со стека
	imul - умножение
	iand - побитовое "и"
	ior - побитовое "или"
	ixor - операция "исключающее или"
	iadd - сложение
	isub - вычитание
	iload_0, iload_1, iload_2, iload_3 - занести в стек значение соответствующей переменной
	istore_0, istore_1, istore_2, istore_3 - записать значение с вершины стека в соответствующую переменную
	swap - меняет местами два верхних значения в стеке
	invokestatic - занести в стек адрес возврата и вызвать функцию с указанным адресом
	return - выход из функции. Извлекает адрес возврата из стека
	Все арифметические операции берут операнды с вершины стека, а затем записывают в стек результат вычислений.

	Входные данные

	bipush 1
	bipush 2
	bipush 3
	iadd
	istore_0
	Выходные данные

	stack:
	1
	vars:
	5
	0
	0
	0